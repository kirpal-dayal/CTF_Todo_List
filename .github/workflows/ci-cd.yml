name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout el código fuente del repositorio
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Configurar Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Autenticarse en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4. Construir y empujar las imágenes Docker para cada microservicio
    - name: Build and push Docker images
      run: |
        docker build -t your-dockerhub-username/task-service ./task-service
        docker build -t your-dockerhub-username/user-service ./user-service
        docker build -t your-dockerhub-username/collaboration-service ./collaboration-service
        docker build -t your-dockerhub-username/notification-service ./notification-service
        
        docker push your-dockerhub-username/task-service
        docker push your-dockerhub-username/user-service
        docker push your-dockerhub-username/collaboration-service
        docker push your-dockerhub-username/notification-service

    # 5. Configurar Kubectl (Herramienta para interactuar con Kubernetes)
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # 6. Autenticarse en el clúster Kubernetes (usando un archivo kubeconfig)
    - name: Set up kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig
        export KUBECONFIG=kubeconfig

    # 7. Desplegar en Kubernetes usando k8s-all.yaml
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/k8s-all.yaml
